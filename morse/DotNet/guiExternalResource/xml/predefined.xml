<?xml version="1.0" encoding="utf-8" ?> 

<predefined>
	<system name="Linear R^2">
		<function>
			<equation>y1=2*x1</equation>
			<equation>y2=0.5*x2</equation>
			<equation>space_min1=-1</equation>
			<equation>space_min2=-1</equation>
			<equation>space_max1=1</equation>
			<equation>space_max2=1</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>_dimension=2</equation>
		</function>
	</system>
	
	<system name="Henon">
		<function>
			<equation>y1=1-1.4*x1*x1+0.3*x2</equation>
			<equation>y2=x1</equation>
			<equation>space_min1=-10</equation>
			<equation>space_min2=-10</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>_dimension=2</equation>
		</function>
	</system>
	
	<system name="Ikeda">
		<function>
			<equation>y1=2-0.9*(x1*cos(tay)-x2*sin(tay))</equation>
			<equation>y2=0.9*(x1*sin(tay)+x2*cos(tay))</equation>
			<equation>space_min1=-10</equation>
			<equation>space_min2=-10</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>tay=0.4-6/(1+x1*x1+x2*x2)</equation>
			<equation>_dimension=2</equation>
		</function>
	</system>
	
	<system name="Julia -0.12+0.74i">
		<function>
			<equation>y1=x1*x1-x2*x2+rec</equation>
			<equation>y2=2*x1*x2+imc</equation>
			<equation>space_min1=-10</equation>
			<equation>space_min2=-10</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>rec=-0.12</equation>
			<equation>imc=0.74</equation>
			<equation>_dimension=2</equation>
		</function>
	</system>
	
	<system name="Julia -0.39054-0.58569i">
		<function>
			<equation>y1=x1*x1-x2*x2+rec</equation>
			<equation>y2=2*x1*x2+imc</equation>
			<equation>space_min1=-10</equation>
			<equation>space_min2=-10</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>rec=-0.39054</equation>
			<equation>imc=-0.58569</equation>
			<equation>_dimension=2</equation>
		</function>
	</system>
	
	<system name="Double Logistics">
		<function>
			<equation>y1=(1-r) * logFunc(X,a) + r * logFunc(Y,b)</equation>
			<equation>y2=r * logFunc(X,a) + (1-r) * logFunc(Y,b)</equation>
			<equation>space_min1=-10</equation>
			<equation>space_min2=-10</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>grid1=10</equation>
			<equation>grid2=10</equation>
			<equation>iteration=1</equation>
			<equation>logFunc(x,m)=m * x * (1-x)</equation>
			<equation>X=x1</equation>
			<equation>Y=x2</equation>
			<equation>r=0.085</equation>
			<equation>a=3.8</equation>
			<equation>b=3.8</equation>
			<equation>_dimension=2</equation>
		</function>	
	</system>	
	
	<system name="Food Chain R^3">
	    <function>
			<equation>y1=fx</equation>
			<equation>y2=fy</equation>
			<equation>y3=fz</equation>
			<equation>space_min1=0.01</equation>
			<equation>space_min2=0.001</equation>
			<equation>space_min3=0.001</equation>
			<equation>space_max1=10</equation>
			<equation>space_max2=10</equation>
			<equation>space_max3=10</equation>
			<equation>grid1=3</equation>
			<equation>grid2=3</equation>
			<equation>grid3=3</equation>
			<equation>iteration=1</equation>
			<equation>kz=(1-exp(-z))/z</equation>
			<equation>ky=(1-exp(-y))/y</equation>
			<equation>u=4*y*z</equation>
			<equation>ku=(1-exp(-u))/u</equation>
			<equation>fx=4.522*x*exp(-y)/(1+x*max(exp(-y),kz*ky))</equation>
			<equation>fy=ky*x*y*exp(-z)*ku</equation>
			<equation>fz=4*y*z</equation>
			<equation>x=x1</equation>
			<equation>y=x2</equation>
			<equation>z=x3</equation>
			<equation>_dimension=3</equation>
		</function>
	</system>
</predefined>